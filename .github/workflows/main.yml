on: [push]

jobs:
  telegram:
    runs-on: ubuntu-latest
    name: Telegram notify
    steps:
      - uses: actions/checkout@v2
      - name: Default
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
      - name: Parse mode (html)
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
          TELEGRAM_PARSE_MODE: html
      - name: Parse mode (md)
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
          TELEGRAM_PARSE_MODE: md
      - name: Built in template
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
          TEMPLATE: debug
      - name: Custom template
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
          # Custom template file path, relative to the repo root
          TELEGRAM_TEMPLATE_PATH: "./test/telegram/custom.txt"
          CUSTOM_VAR1: ${{github.repository_owner}}
          CUSTOM_VAR2: "a custom variable"
      - name: Custom script
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
          CUSTOM_SCRIPT: |
            echo custom script
            tg -q -f ./test/telegram/custom.txt -t document "#${GITHUB_RUN_NUMBER} ${GITHUB_JOB_STATUS}"
  slack_webhook:
    runs-on: ubuntu-latest
    name: Slack notify via webhook
    steps:
      - uses: actions/checkout@v2
      - name: Default
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Built in template
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          TEMPLATE: debug
      - name: Custom template
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TEMPLATE_PATH: "./test/slack/custom.json"
          CUSTOM_VAR1: ${{github.repository_owner}}
          CUSTOM_VAR2: "a custom variable"
      - name: Custom script
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          CUSTOM_SCRIPT: |
            echo custom script
            read -r -d '' BODY <<- EOL || true
            {
              "attachments": [
                {
                  "color": "${GITHUB_JOB_STATUS_COLOR}",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "#${GITHUB_RUN_NUMBER} $(cat "$GITHUB_EVENT_PATH" | jq -cr .commits[0].timestamp)"
                      },
                      "accessory": {
                        "type": "image",
                        "image_url": "https://avatars.githubusercontent.com/actions?s=48",
                        "alt_text": "actions"
                      }
                    }
                  ]
                }
              ]
            }
            EOL
            echo "$BODY"
            curl -sSL -X POST -H "content-type: application/json" -d "${BODY}" ${SLACK_WEBHOOK_URL}
  slack_api:
    runs-on: ubuntu-latest
    name: Slack notify via api
    steps:
      - uses: actions/checkout@v2
      - name: Default
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  discord_webhook:
    runs-on: ubuntu-latest
    name: Discord notify via webhook
    steps:
      - uses: actions/checkout@v2
      - name: Default
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
  line:
    runs-on: ubuntu-latest
    name: Line.me notify
    steps:
      - uses: actions/checkout@v2
      - name: Notify single id
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          LINE_TO: ${{ secrets.LINE_TO }}
      # Needs to be all user ids, can't mix with group id
      # - name: Notify multiple user ids
      #   uses: up9cloud/action-notify@master
      #   if: cancelled() == false
      #   env:
      #     GITHUB_JOB_STATUS: ${{ job.status }}
      #     LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
      #     LINE_TO: ${{ secrets.LINE_TO_MULTI }}
      - name: Built in template
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          LINE_TO: ${{ secrets.LINE_TO }}
          TEMPLATE: debug
      - name: Custom script
        uses: up9cloud/action-notify@master
        if: cancelled() == false
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          LINE_TO: ${{ secrets.LINE_TO }}
          CUSTOM_SCRIPT: |
            read -r -d '' _BODY <<- EOM || true
            {
                "to": "${LINE_TO}",
                "messages":[
                    {
                        "type":"text",
                        "text":"${GITHUB_JOB_STATUS_EMOJI} ${GITHUB_JOB_STATUS}"
                    }
                ]
            }
            EOM
            
            curl -v -X POST https://api.line.me/v2/bot/message/push \
              -H 'Content-Type: application/json' \
              -H "Authorization: Bearer ${LINE_CHANNEL_ACCESS_TOKEN}" \
              -d "$_BODY"
  standalone:
    if: cancelled() == false
    needs:
      - telegram
      - slack_webhook
      - slack_api
      - discord_webhook
      - line
    runs-on: ubuntu-latest
    steps:
      - id: set_status
        run: |
          if [ "${{needs.telegram.result}}" = "success" ] &&
            [ "${{needs.slack_webhook.result}}" = "success" ] &&
            [ "${{needs.slack_api.result}}" = "success" ] &&
            [ "${{needs.discord_webhook.result}}" = "success" ] &&
            [ "${{needs.line.result}}" = "success" ]; then
            echo "::set-output name=status::success"
          else
            echo "::set-output name=status::failure"
          fi
      - uses: up9cloud/action-notify@master
        env:
          # GITHUB_JOB_STATUS: ${{ needs.telegram.result }}
          GITHUB_JOB_STATUS: ${{steps.set_status.outputs.status}}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
